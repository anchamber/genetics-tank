// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: tank.proto

package proto

import (
	proto "github.com/anchamber/genetics-api/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System    string `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Number    int32  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Active    bool   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Size      int32  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	FishCount int32  `protobuf:"varint,5,opt,name=fishCount,proto3" json:"fishCount,omitempty"`
}

func (x *Tank) Reset() {
	*x = Tank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tank) ProtoMessage() {}

func (x *Tank) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tank.ProtoReflect.Descriptor instead.
func (*Tank) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{0}
}

func (x *Tank) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *Tank) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Tank) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Tank) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Tank) GetFishCount() int32 {
	if x != nil {
		return x.FishCount
	}
	return 0
}

type StreamTanksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters     []*proto.Filter   `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	Pageination *proto.Pagination `protobuf:"bytes,2,opt,name=pageination,proto3" json:"pageination,omitempty"`
}

func (x *StreamTanksRequest) Reset() {
	*x = StreamTanksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTanksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTanksRequest) ProtoMessage() {}

func (x *StreamTanksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTanksRequest.ProtoReflect.Descriptor instead.
func (*StreamTanksRequest) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{1}
}

func (x *StreamTanksRequest) GetFilters() []*proto.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *StreamTanksRequest) GetPageination() *proto.Pagination {
	if x != nil {
		return x.Pageination
	}
	return nil
}

type GetTankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTankRequest) Reset() {
	*x = GetTankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTankRequest) ProtoMessage() {}

func (x *GetTankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTankRequest.ProtoReflect.Descriptor instead.
func (*GetTankRequest) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{2}
}

func (x *GetTankRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	System    string `protobuf:"bytes,2,opt,name=system,proto3" json:"system,omitempty"`
	Number    int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Active    bool   `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	Size      int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	FishCount int32  `protobuf:"varint,6,opt,name=fishCount,proto3" json:"fishCount,omitempty"`
}

func (x *TankResponse) Reset() {
	*x = TankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TankResponse) ProtoMessage() {}

func (x *TankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TankResponse.ProtoReflect.Descriptor instead.
func (*TankResponse) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{3}
}

func (x *TankResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TankResponse) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *TankResponse) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *TankResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *TankResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TankResponse) GetFishCount() int32 {
	if x != nil {
		return x.FishCount
	}
	return 0
}

type GetTankStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTankStatsRequest) Reset() {
	*x = GetTankStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTankStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTankStatsRequest) ProtoMessage() {}

func (x *GetTankStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTankStatsRequest.ProtoReflect.Descriptor instead.
func (*GetTankStatsRequest) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{4}
}

type GetTankStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountOverall          int64 `protobuf:"varint,1,opt,name=countOverall,proto3" json:"countOverall,omitempty"`
	CountCleaningSoon     int64 `protobuf:"varint,2,opt,name=countCleaningSoon,proto3" json:"countCleaningSoon,omitempty"`
	CountCleaningRequired int64 `protobuf:"varint,3,opt,name=countCleaningRequired,proto3" json:"countCleaningRequired,omitempty"`
}

func (x *GetTankStatsResponse) Reset() {
	*x = GetTankStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTankStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTankStatsResponse) ProtoMessage() {}

func (x *GetTankStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTankStatsResponse.ProtoReflect.Descriptor instead.
func (*GetTankStatsResponse) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{5}
}

func (x *GetTankStatsResponse) GetCountOverall() int64 {
	if x != nil {
		return x.CountOverall
	}
	return 0
}

func (x *GetTankStatsResponse) GetCountCleaningSoon() int64 {
	if x != nil {
		return x.CountCleaningSoon
	}
	return 0
}

func (x *GetTankStatsResponse) GetCountCleaningRequired() int64 {
	if x != nil {
		return x.CountCleaningRequired
	}
	return 0
}

type CreateTankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System    string `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Number    int32  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Active    bool   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Size      int32  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	FishCount int32  `protobuf:"varint,5,opt,name=fishCount,proto3" json:"fishCount,omitempty"`
}

func (x *CreateTankRequest) Reset() {
	*x = CreateTankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTankRequest) ProtoMessage() {}

func (x *CreateTankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTankRequest.ProtoReflect.Descriptor instead.
func (*CreateTankRequest) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTankRequest) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *CreateTankRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CreateTankRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *CreateTankRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CreateTankRequest) GetFishCount() int32 {
	if x != nil {
		return x.FishCount
	}
	return 0
}

type CreateTankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateTankResponse) Reset() {
	*x = CreateTankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTankResponse) ProtoMessage() {}

func (x *CreateTankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTankResponse.ProtoReflect.Descriptor instead.
func (*CreateTankResponse) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{7}
}

type UpdateTankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tank *Tank                  `protobuf:"bytes,2,opt,name=tank,proto3" json:"tank,omitempty"`
	Mask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *UpdateTankRequest) Reset() {
	*x = UpdateTankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTankRequest) ProtoMessage() {}

func (x *UpdateTankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTankRequest.ProtoReflect.Descriptor instead.
func (*UpdateTankRequest) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTankRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTankRequest) GetTank() *Tank {
	if x != nil {
		return x.Tank
	}
	return nil
}

func (x *UpdateTankRequest) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type UpdateTankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTankResponse) Reset() {
	*x = UpdateTankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTankResponse) ProtoMessage() {}

func (x *UpdateTankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTankResponse.ProtoReflect.Descriptor instead.
func (*UpdateTankResponse) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{9}
}

type DeleteTankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteTankRequest) Reset() {
	*x = DeleteTankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTankRequest) ProtoMessage() {}

func (x *DeleteTankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTankRequest.ProtoReflect.Descriptor instead.
func (*DeleteTankRequest) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteTankRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteTankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTankResponse) Reset() {
	*x = DeleteTankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tank_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTankResponse) ProtoMessage() {}

func (x *DeleteTankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tank_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTankResponse.ProtoReflect.Descriptor instead.
func (*DeleteTankResponse) Descriptor() ([]byte, []int) {
	return file_tank_proto_rawDescGZIP(), []int{11}
}

var File_tank_proto protoreflect.FileDescriptor

var file_tank_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x61, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x61, 0x6e,
	0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73,
	0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x01,
	0x0a, 0x04, 0x54, 0x61, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x94, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x44, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x98, 0x01,
	0x0a, 0x0c, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69,
	0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66,
	0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x9e, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x2c, 0x0a, 0x11,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x22, 0x8d, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x04, 0x74, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x6e, 0x6b, 0x12, 0x2e,
	0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x14,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xda, 0x03, 0x0a, 0x0b, 0x54, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x6e,
	0x6b, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61,
	0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x6e, 0x63,
	0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x51, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6e, 0x6b, 0x12, 0x22, 0x2e, 0x61, 0x6e,
	0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6e,
	0x6b, 0x12, 0x25, 0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b,
	0x12, 0x25, 0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b, 0x12,
	0x25, 0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6e, 0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63,
	0x73, 0x2d, 0x74, 0x61, 0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tank_proto_rawDescOnce sync.Once
	file_tank_proto_rawDescData = file_tank_proto_rawDesc
)

func file_tank_proto_rawDescGZIP() []byte {
	file_tank_proto_rawDescOnce.Do(func() {
		file_tank_proto_rawDescData = protoimpl.X.CompressGZIP(file_tank_proto_rawDescData)
	})
	return file_tank_proto_rawDescData
}

var file_tank_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_tank_proto_goTypes = []interface{}{
	(*Tank)(nil),                  // 0: anchamber.genetics.Tank
	(*StreamTanksRequest)(nil),    // 1: anchamber.genetics.StreamTanksRequest
	(*GetTankRequest)(nil),        // 2: anchamber.genetics.GetTankRequest
	(*TankResponse)(nil),          // 3: anchamber.genetics.TankResponse
	(*GetTankStatsRequest)(nil),   // 4: anchamber.genetics.GetTankStatsRequest
	(*GetTankStatsResponse)(nil),  // 5: anchamber.genetics.GetTankStatsResponse
	(*CreateTankRequest)(nil),     // 6: anchamber.genetics.CreateTankRequest
	(*CreateTankResponse)(nil),    // 7: anchamber.genetics.CreateTankResponse
	(*UpdateTankRequest)(nil),     // 8: anchamber.genetics.UpdateTankRequest
	(*UpdateTankResponse)(nil),    // 9: anchamber.genetics.UpdateTankResponse
	(*DeleteTankRequest)(nil),     // 10: anchamber.genetics.DeleteTankRequest
	(*DeleteTankResponse)(nil),    // 11: anchamber.genetics.DeleteTankResponse
	(*proto.Filter)(nil),          // 12: anchamber.genetics.api.Filter
	(*proto.Pagination)(nil),      // 13: anchamber.genetics.api.Pagination
	(*fieldmaskpb.FieldMask)(nil), // 14: google.protobuf.FieldMask
}
var file_tank_proto_depIdxs = []int32{
	12, // 0: anchamber.genetics.StreamTanksRequest.filters:type_name -> anchamber.genetics.api.Filter
	13, // 1: anchamber.genetics.StreamTanksRequest.pageination:type_name -> anchamber.genetics.api.Pagination
	0,  // 2: anchamber.genetics.UpdateTankRequest.tank:type_name -> anchamber.genetics.Tank
	14, // 3: anchamber.genetics.UpdateTankRequest.mask:type_name -> google.protobuf.FieldMask
	1,  // 4: anchamber.genetics.TankService.StreamTanks:input_type -> anchamber.genetics.StreamTanksRequest
	2,  // 5: anchamber.genetics.TankService.GetTank:input_type -> anchamber.genetics.GetTankRequest
	6,  // 6: anchamber.genetics.TankService.CreateTank:input_type -> anchamber.genetics.CreateTankRequest
	8,  // 7: anchamber.genetics.TankService.UpdateTank:input_type -> anchamber.genetics.UpdateTankRequest
	10, // 8: anchamber.genetics.TankService.DeleteTank:input_type -> anchamber.genetics.DeleteTankRequest
	3,  // 9: anchamber.genetics.TankService.StreamTanks:output_type -> anchamber.genetics.TankResponse
	3,  // 10: anchamber.genetics.TankService.GetTank:output_type -> anchamber.genetics.TankResponse
	7,  // 11: anchamber.genetics.TankService.CreateTank:output_type -> anchamber.genetics.CreateTankResponse
	9,  // 12: anchamber.genetics.TankService.UpdateTank:output_type -> anchamber.genetics.UpdateTankResponse
	11, // 13: anchamber.genetics.TankService.DeleteTank:output_type -> anchamber.genetics.DeleteTankResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_tank_proto_init() }
func file_tank_proto_init() {
	if File_tank_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tank_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamTanksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTankStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTankStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tank_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tank_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tank_proto_goTypes,
		DependencyIndexes: file_tank_proto_depIdxs,
		MessageInfos:      file_tank_proto_msgTypes,
	}.Build()
	File_tank_proto = out.File
	file_tank_proto_rawDesc = nil
	file_tank_proto_goTypes = nil
	file_tank_proto_depIdxs = nil
}
